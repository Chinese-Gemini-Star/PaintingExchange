basePath: /
definitions:
  model.User:
    description: 用户
    properties:
      avatarURI:
        description: 头像地址
        example: TODO
        type: string
      intro:
        description: 描述
        example: 我是test
        type: string
      password:
        description: 密码
        example: "123456"
        type: string
      username:
        description: 用户名
        example: test
        type: string
    type: object
host: localhost:8880
info:
  contact: {}
  description: 绘画交流平台的后端API文档
  title: 绘画交流平台
  version: "1.0"
paths:
  /user:
    put:
      consumes:
      - application/json
      description: 允许已登录的用户更新自己的信息，包括密码。如果没有提供密码，密码保持不变。
      parameters:
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "204":
          description: 用户信息更新成功，无返回内容
        "401":
          description: 未授权，用户未登录或会话失效
          schema:
            type: string
        "403":
          description: 禁止操作，尝试修改非自己的信息
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 更新用户信息
      tags:
      - User
  /user/{username}:
    get:
      description: 根据用户名获取用户详细信息(无密码)，需要JWT验证
      parameters:
      - description: 用户名
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: 用户对象(无密码)
          schema:
            $ref: '#/definitions/model.User'
        "401":
          description: 未授权错误
          schema:
            type: string
        "404":
          description: 用户不存在
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 获取指定用户名的用户对象(无密码)
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户通过用户名和密码登录，成功后返回 JWT Token
      parameters:
      - description: 用户登录信息(只需要username和password)
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - text/plain
      responses:
        "200":
          description: JWT Token
          schema:
            type: string
        "403":
          description: 用户名或密码错误
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      summary: 用户登录
      tags:
      - auth
  /user/register:
    post:
      consumes:
      - application/json
      description: 用户进行注册，成功后返回 JWT Token
      parameters:
      - description: 用户注册信息(只需要username和password)
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - text/plain
      responses:
        "201":
          description: JWT Token
          schema:
            type: string
        "403":
          description: 用户名已存在
          schema:
            type: string
        "500":
          description: 服务器内部错误
          schema:
            type: string
      summary: 用户注册
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
